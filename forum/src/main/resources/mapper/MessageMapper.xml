<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.com.cqucc.forum.dao.MessageMapper">
    <sql id="selectFields">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <sql id="insertFields">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <!--查询用户会话列表-->
    <select id="selectConversations" resultType="Message">
        select
        <include refid="selectFields"></include>
        from message where id in (
        select max(id)
        from message
        where status != 2
        and from_id != 1
        and (from_id = #{userId} or to_id = #{userId})
        GROUP by conversation_id
        )
        order by id desc
        limit #{offset},#{limit};
    </select>

    <!--查询用户的会话数量-->
    <select id="selectConversationCount" resultType="int">
        select count(m.maxId) from (
          select max(id) as maxId
          from message
          where status != 2
          and from_id != 1
          and (from_id = #{userId} or to_id = #{userId})
          group by conversation_id
    ) as m
    </select>

    <!--查询私信列表-->
    <select id="selectLetters" resultType="Message">
        SELECT
        <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
        limit #{offset},#{limit}
    </select>

    <!--查询私信数量-->
    <select id="selectLetterCount" resultType="int">
        select count(id) from message
        where status != 2
        and from_id != 1
        and conversation_id = #{conversationId}
    </select>

    <!--查询未读消息数量-->
    <select id="selectLetterUnread" resultType="int">
        select count(id) from message
        where status = 0
        and from_id != 1
        and to_id = #{userId}
        <if test="conversationId!= null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <!--插入私信 keyProperty="id" 设置主键id自增-->
    <insert id="insertMessage" parameterType="Message" keyProperty="id">
        insert into message (<include refid="insertFields"></include> )
        values(#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>

    <!--修改私信状态 可以适用于已读 删除 注意之后使用到在mybatis总是如何遍历集合的 使用foreach-->
    <update id="updateMessageStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <!--查询某一主题最新的消息-->
    <select id="getLatestNotice" resultType="Message">
        select
        <include refid="selectFields"></include>
        from message
        where id in (
        select max(id)
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        );
    </select>

    <!--查询某一主题下的消息数量-->
    <select id="selectNoticeCount" resultType="int">
        select count(id)
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
    </select>

    <!--查询某一主题 或 所有主题未读消息数量-->
    <select id="selectUnreadNoticeCount" resultType="int">
        select count(id)
        from message
        where status = 0
        and from_id = 1
        and to_id = #{userId}
        <if test="topic != null">
            and conversation_id = #{topic} /*如果不传递主题查询的是所有的未读消息数量*/
        </if>
    </select>

    <!--查询某一用户 某一 主题下的消息详情-->
    <select id="selectNotices" resultType="Message">
        select
        <include refid="selectFields"></include>
        from message
        where status != 2
        and from_id = 1
        and to_id = #{userId}
        and conversation_id = #{topic}
        order by create_time DESC
        limit #{offset} , #{limit}
    </select>

</mapper>